# Enable URL rewriting
RewriteEngine On

# Force HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Remove trailing slashes
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)/$ /$1 [L,R=301]

# SEO-friendly URLs
RewriteRule ^services/([a-zA-Z0-9-]+)-([0-9]+)$ service.php?id=$2 [L,QSA]
RewriteRule ^destinations/([a-zA-Z0-9-]+)-([0-9]+)$ destination.php?id=$2 [L,QSA]
RewriteRule ^packages/([a-zA-Z0-9-]+)-([0-9]+)$ package.php?id=$2 [L,QSA]

# Custom error pages
ErrorDocument 404 /404.php
ErrorDocument 500 /500.php

# Enable GZIP compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

# Browser caching
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType text/html "access plus 1 day"
    ExpiresByType application/xhtml+xml "access plus 1 day"
</IfModule>

# Security headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-XSS-Protection "1; mode=block"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Enhanced Content Security Policy
    Header set Content-Security-Policy "default-src 'self'; \
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com https://connect.facebook.net; \
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; \
        img-src 'self' data: https: blob:; \
        font-src 'self' https://fonts.gstatic.com; \
        connect-src 'self' https://www.google-analytics.com https://*.doubleclick.net; \
        frame-src 'self' https://www.google.com https://www.youtube.com https://player.vimeo.com; \
        object-src 'none'; \
        base-uri 'self'; \
        form-action 'self'; \
        frame-ancestors 'self'; \
        upgrade-insecure-requests;"
    
    # CORS headers for fonts and images
    <FilesMatch "\.(ttf|ttc|otf|eot|woff|woff2|font.css|css|js)$">
        Header set Access-Control-Allow-Origin "*"
    </FilesMatch>
    
    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options "nosniff"
    
    # Additional security headers
    Header set X-Permitted-Cross-Domain-Policies "none"
    Header set X-Download-Options "noopen"
    Header set X-DNS-Prefetch-Control "off"
</IfModule>

# Prevent directory listing
Options -Indexes

# Enhanced file protection
<FilesMatch "^\.">
    Order allow,deny
    Deny from all
</FilesMatch>

<FilesMatch "(^#.*#|\.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|sw[op]|git.*|env|htaccess|htpasswd)|~)$">
    Order allow,deny
    Deny from all
</FilesMatch>

# Block access to sensitive directories
RedirectMatch 403 ^/(?:\.git|\.svn|\.hg|\.env|\.vscode|node_modules)/.*$

# Protect against common exploits
<IfModule mod_rewrite.c>
    RewriteCond %{REQUEST_METHOD} ^(HEAD|TRACE|DELETE|TRACK|DEBUG) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # Block suspicious query strings
    RewriteCond %{QUERY_STRING} \.\.\/ [NC,OR]
    RewriteCond %{QUERY_STRING} boot\.ini [NC,OR]
    RewriteCond %{QUERY_STRING} tag\= [NC,OR]
    RewriteCond %{QUERY_STRING} ftp\: [NC,OR]
    RewriteCond %{QUERY_STRING} http\: [NC,OR]
    RewriteCond %{QUERY_STRING} https\: [NC,OR]
    RewriteCond %{QUERY_STRING} mosConfig [NC,OR]
    RewriteCond %{QUERY_STRING} ^.*(\[|\]|\(|\)|<|>|'|"|;|\?|\*|=$).* [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # Block MySQL injections, RFI, base64, etc.
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=http%3A%2F%2F [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=https:// [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=https%3A%2F%2F [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=(\.\.//?)+ [OR]
    RewriteCond %{QUERY_STRING} [a-zA-Z0-9_]=/([a-z0-9_.]//?)+ [NC]
    RewriteRule .* - [F,L]
</IfModule>

# PHP security settings
<IfModule mod_php.c>
    php_flag display_errors off
    php_flag log_errors on
    php_flag register_globals off
    php_flag allow_url_fopen off
    php_flag allow_url_include off
    php_value max_input_time 60
    php_value max_execution_time 30
    php_value memory_limit 128M
    php_value post_max_size 8M
    php_value upload_max_filesize 2M
    php_value max_input_vars 1000
    php_value session.cookie_httponly 1
    php_value session.cookie_secure 1
    php_value session.use_only_cookies 1
    php_value session.cookie_samesite "Strict"
</IfModule>
